[{"/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/reportWebVitals.ts":"1","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/App.tsx":"2","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/user/FirstComponent.tsx":"3","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/index.tsx":"4","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/error/Error.tsx":"5","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/login/Login.styles.tsx":"6","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/login/Login.tsx":"7","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/login/Welcome.tsx":"8"},{"size":425,"mtime":1608762166302,"results":"9","hashOfConfig":"10"},{"size":579,"mtime":1609181786482,"results":"11","hashOfConfig":"10"},{"size":1951,"mtime":1609105241861,"results":"12","hashOfConfig":"10"},{"size":500,"mtime":1608763139164,"results":"13","hashOfConfig":"10"},{"size":250,"mtime":1609180381552,"results":"14","hashOfConfig":"10"},{"size":174,"mtime":1609181434437,"results":"15","hashOfConfig":"10"},{"size":1930,"mtime":1609181615451,"results":"16","hashOfConfig":"10"},{"size":204,"mtime":1609181847139,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zxrn8a",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/reportWebVitals.ts",[],"/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/App.tsx",[],"/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/user/FirstComponent.tsx",["37"],"/**@jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport { jsx, css } from \"@emotion/react\";\n\nconst base = css`\n  color: orange;\n`;\n\nconst danger = css`\n  color: red;\n`;\n\nconst button = css`\n  background-color: teal;\n  color: white;\n`;\n\nfunction FirstComponent() {\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [isDanger, setIsDanger] = useState(false);\n\n  function handleDangerClick() {\n    setIsDanger(!isDanger);\n  }\n\n  function handleFormInput(e: React.FormEvent<HTMLInputElement>) {\n    const name = e.currentTarget.name;\n    const val = e.currentTarget.value;\n    switch (name) {\n      case \"email\":\n        setEmail(val);\n        break;\n      case \"firstName\":\n        setFirstName(val);\n        break;\n      case \"lastName\":\n        setLastName(val);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const user = {\n      email,\n      firstName,\n      lastName,\n    };\n\n    console.log(\"submitting\", user);\n  }\n  return (\n    <div>\n      <h1 css={[danger, base]}>Add a user</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">\n          Email\n          <input type=\"text\" name=\"email\" onChange={handleFormInput} />\n        </label>\n        <label htmlFor=\"firstName\">\n          First Name\n          <input type=\"text\" name=\"firstName\" onChange={handleFormInput} />\n        </label>\n        <label htmlFor=\"lastName\">\n          Last Name\n          <input type=\"text\" name=\"lastName\" onChange={handleFormInput} />\n        </label>\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n      <h3 css={isDanger ? danger : base}>Danger Will Robinson</h3>\n      <button css={button} onClick={handleDangerClick}>\n        danger\n      </button>\n    </div>\n  );\n}\n\nexport default FirstComponent;\n","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/index.tsx",[],["38","39"],"/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/error/Error.tsx",[],"/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/login/Login.styles.tsx",["40"],"/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/login/Login.tsx",["41","42"],"/**@jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsx, css } from \"@emotion/react\";\nimport { danger, success } from \"../login/Login.styles\";\n\nfunction Login(props: any) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n\n  function handleLoginFieldInput(e: React.ChangeEvent<HTMLInputElement>) {\n    let name = e.currentTarget.name;\n    let val = e.currentTarget.value;\n    switch (name) {\n      case \"username\":\n        setUsername(val);\n        break;\n      case \"password\":\n        setPassword(val);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function handleLogin(e: React.SyntheticEvent) {\n    e.preventDefault();\n    // hard coded validation\n    if (username === \"logan\" && password === \"password\") {\n      setLoggedIn(true);\n      props.history.push(\"/creditcards\"); // to use, import withRouter from 'react-router-dom' and export default withRouter(component)\n    } else {\n      setLoggedIn(false);\n      setLoginError(true);\n    }\n  }\n  return (\n    <div>\n      {!loggedIn ? (\n        <>\n          <h1>Login</h1>\n          {loginError && <h3 css={danger}>Invalid Credentials</h3>}\n        </>\n      ) : (\n        <h3 css={success}>Successfully Logged In</h3>\n      )}\n      <form>\n        <label>\n          <h3>Username</h3>\n          <input type=\"text\" name=\"username\" onChange={handleLoginFieldInput} value={username} placeholder=\"username\" />\n        </label>\n        <label>\n          <h3>Password</h3>\n          <input type=\"password\" name=\"password\" onChange={handleLoginFieldInput} value={password} placeholder=\"password\" />\n        </label>\n        <button onClick={handleLogin}>Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default withRouter(Login);\n","/Users/loganwood/Desktop/Programming/Java/billtracking/client/src/components/login/Welcome.tsx",[],{"ruleId":"43","severity":1,"message":"44","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":13},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":13},{"ruleId":"43","severity":1,"message":"51","line":4,"column":15,"nodeType":"45","messageId":"46","endLine":4,"endColumn":18},"@typescript-eslint/no-unused-vars","'jsx' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"'css' is defined but never used.","no-global-assign","no-unsafe-negation"]